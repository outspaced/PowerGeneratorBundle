<?php

namespace {{ namespace }}\Tests\{{ section }};

{% block use_statements %}
use {{ namespace }}\{{ section }};
{% for use in uses %}
use {{ use }};
{% endfor %}
{% endblock use_statements %}

{% block class_definition %}
class {{ class }}Test extends \PHPUnit_Framework_TestCase
{% endblock class_definition %}
{
{% block class_body %}
    /**
     * @var \{{ namespace }}\{{ section }}\{{ class }}
     */
    protected $object;

    /**
     */
    protected function setUp()
    {
{% for field in fields %}    
{% if field.constructor == 'Y' %}
        ${{ field.fieldName }} = {{ field.testValue }};
{% endif %}
{% endfor -%}

        $this->object = new \{{ namespace }}\{{ section }}\{{ class }}({%- for field in fields -%}
            {%- if field.constructor == 'Y' -%}
                {%- if not loop.first -%}, {% endif %}${{ field.fieldName -}}
            {%- endif -%}
        {%- endfor -%});
    }

{% for field in fields %}
{% if field.constructor != 'Y' %}
    /**
     * @covers {{ namespace }}\{{ section }}\{{ class }}::set{{ field.fieldNameCapitalized }}
     * @covers {{ namespace }}\{{ section }}\{{ class }}::get{{ field.fieldNameCapitalized }}
     */
    public function testSet{{ field.fieldNameCapitalized }}()
    {
        $value = {{ field.testValue }};

        $this->object->set{{ field.fieldNameCapitalized }}($value);

        $this->assertEquals($value, $this->object->get{{ field.fieldNameCapitalized }}());
    }

{% endif %}
{% endfor %}
{% endblock class_body %}
}
